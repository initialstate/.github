name: is-repo-lint
on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]
  workflow_dispatch:
jobs:
  check-for-codeowners-file:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Check for CODEOWNERS
        id: codeowners_file
        uses: initialstate/file-check-action@v1
        with:
          file: ".github/CODEOWNERS"

      - name: CODEOWNERS file Output Test
        run: echo ${{ steps.codeowners_file.outputs.file_exists }}

      - name: CODEOWNERS file exists with content
        if: steps.codeowners_file.outputs.file_exists == 'true'
        run: echo CODEOWNERS file exists!

      - name: CODEOWNERS file does not exist
        if: steps.codeowners_file.outputs.file_exists == 'false'
        run: echo CODEOWNERS file does not exist!

  check-for-readme-file:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Check for README.md
        id: readme_file
        uses: initialstate/file-check-action@v1
        with:
          file: "README"

      - name: README file Output Test
        run: echo ${{ steps.readme_file.outputs.file_exists }}

      - name: README file exists with content
        if: steps.readme_file.outputs.file_exists == 'true'
        run: echo README file exists!

      - name: README file does not exist
        if: steps.readme_file.outputs.file_exists == 'false'
        run: echo README file does not exist!

  check-for-license:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Check for LICENSE.md
        id: license_file
        uses: initialstate/file-check-action@v1
        with:
          file: "LICENSE"

      - name: LICENSE file Output Test
        run: echo ${{ steps.license_file.outputs.file_exists }}

      - name: LICENSE file exists with content
        if: steps.license_file.outputs.file_exists == 'true'
        run: echo LICENSE file exists!

      - name: LICENSE file does not exist
        if: steps.license_file.outputs.file_exists == 'false'
        run: echo LICENSE file does not exist!

  check-for-dependabot-file:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Check for dependabot.yml
        id: dependabot_file
        uses: initialstate/file-check-action@v1
        with:
          file: ".github/dependabot.yml"

      - name: dependabot.yml file Output Test
        run: echo ${{ steps.dependabot_file.outputs.file_exists }}

      - name: dependabot file exists with content
        if: steps.dependabot_file.outputs.file_exists == 'true'
        run: echo dependabot file exists!

      - name: dependabot file does not exist
        if: steps.dependabot_file.outputs.file_exists == 'false'
        run: echo dependabot file does not exist!

  check-for-personal-access-token:
      runs-on: ubuntu-latest
      outputs:
        my-key: ${{ steps.my-key.outputs.defined }}
      steps:
          - name: Check for PERSONAL_ACCESS_TOKEN
            id: my-key
            env:
                MY_KEY: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
            if: "${{ env.MY_KEY != '' }}"
            run: echo "::set-output name=defined::true"

          - name: personal access token exists
            if: steps.my-key.outputs.my-key == 'true'
            run: echo PERSONAL_ACCESS_TOKEN secret IS NOT empty

          - name: personal access token does not exist
            if: steps.my-key.outputs.my-key == 'false'
            run: echo PERSONAL_ACCESS_TOKEN secret IS empty

  personal-access-token-exists:
      runs-on: ubuntu-latest
      needs: [check-secret]
      if: needs.check-for-personal-access-token.outputs.my-key == 'true'
      steps:
        - run: echo "This command is executed if PERSONAL_ACCESS_TOKEN secret IS NOT empty"

  personal-access-token-does-not-exist:
      runs-on: ubuntu-latest
      needs: [check-secret]
      if: needs.check-for-personal-access-token.outputs.my-key != 'true'
      steps:
        - run: echo "This command is executed if PERSONAL_ACCESS_TOKEN secret IS empty"